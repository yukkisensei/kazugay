name: Hyprland CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 360

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache-${{ github.run_id }}
          restore-keys: ${{ runner.os }}-ccache-

      - name: Setup user and workspace
        run: |
          PASS=$(openssl rand -base64 12 | tr -dc 'A-Za-z0-9' | head -c16)
          sudo useradd -m -s /bin/bash yuu
          echo "yuu:$PASS" | sudo chpasswd
          echo "CI_USER=yuu" >> $GITHUB_ENV
          echo "CI_PASS=$PASS" >> $GITHUB_ENV
          sudo mkdir -p /home/yuu/work
          sudo cp -r $GITHUB_WORKSPACE /home/yuu/work/repo
          sudo chown -R yuu:yuu /home/yuu/work

      - name: Install base dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq \
            git curl wget unzip build-essential software-properties-common \
            cmake pkg-config python3 python3-pip gnupg meson ninja-build \
            libwayland-dev wayland-protocols libhyprlang-dev \
            libxkbcommon-dev libseat-dev \
            libdrm-dev libgles2-mesa-dev \
            libpixman-1-dev libvulkan-dev \
            libxcb1-dev libxcb-composite0-dev \
            libxcb-xfixes0-dev libxcb-render0-dev \
            libxcb-icccm4-dev libxcb-image0-dev \
            libxcb-util-dev libxcb-ewmh-dev \
            libxcb-present-dev libxcb-damage0-dev \
            libxcb-randr0-dev libxcb-xinput-dev \
            libxcb-xinerama0-dev libxcb-xkb-dev \
            libpugixml-dev hwdata tomlplusplus-dev \
            xwayland dbus-x11 openssl swaybg waybar kitty \
            libgbm-dev libudev-dev libevdev-dev libmtdev-dev libluajit-5.1-dev libwacom-dev \
            libgtk-3-dev libzip-dev librsvg2-dev \
            ccache > /dev/null

      - name: Install Brave + Discord
        run: |
          sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main" \
            | sudo tee /etc/apt/sources.list.d/brave-browser-release.list >/dev/null
          sudo apt-get update -qq
          sudo apt-get install -y -qq brave-browser > /dev/null
          wget -q -O discord.deb "https://discord.com/api/download?platform=linux&format=deb"
          sudo apt-get install -y -qq ./discord.deb > /dev/null
          rm -f discord.deb

      - name: Install Clang 18
        run: |
          wget -q https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18 all
          
      - name: Build and Install Aquamarine
        run: |
          sudo -u yuu HOME=/home/yuu git clone -q https://github.com/hyprwm/aquamarine.git /home/yuu/work/aquamarine
          sudo -u yuu HOME=/home/yuu bash -c ' \
            cd /home/yuu/work/aquamarine && \
            env CC="ccache clang-18" CXX="ccache clang++-18" meson setup build --prefix=/usr -Dbuildtype=release && \
            ninja -C build -j$(nproc) \
          '
          sudo meson install -C /home/yuu/work/aquamarine/build

      - name: Build Hyprland + WayVNC
        run: |
          sudo -u yuu HOME=/home/yuu git clone -q --recursive https://github.com/hyprwm/Hyprland.git /home/yuu/work/Hyprland
          sudo -u yuu HOME=/home/yuu bash -c ' \
            cd /home/yuu/work/Hyprland && \
            env CC="ccache clang-18" CXX="ccache clang++-18" meson setup build --prefix=/usr -Dbuildtype=release && \
            ninja -C build -j$(nproc) \
          '
          sudo meson install -C /home/yuu/work/Hyprland/build

          sudo -u yuu HOME=/home/yuu git clone -q --depth=1 https://github.com/any1/wayvnc.git /home/yuu/work/wayvnc
          sudo -u yuu HOME=/home/yuu bash -c ' \
            cd /home/yuu/work/wayvnc && \
            env CC="ccache clang-18" CXX="ccache clang++-18" meson setup build --prefix=/usr -Dbuildtype=release && \
            ninja -C build -j$(nproc) \
          '
          sudo meson install -C /home/yuu/work/wayvnc/build

      - name: Configure Hyprland and other apps
        run: |
          USER=yuu
          HOME=/home/$USER
          sudo -u $USER mkdir -p $HOME/.config/hypr
          sudo -u $USER mkdir -p $HOME/.config/waybar
          sudo -u $USER mkdir -p $HOME/.config/kitty
          
          # Basic Hyprland config
          cat <<EOF | sudo -u $USER tee $HOME/.config/hypr/hyprland.conf
          exec-once = waybar & swaybg -c "#2e3440" & kitty
          exec-once = brave-browser
          exec-once = discord
          
          input {
              kb_layout = us
          }
          
          general {
              gaps_in = 5
              gaps_out = 10
              border_size = 2
              col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
              col.inactive_border = rgba(595959aa)
          }
          
          bind = SUPER, Q, exec, kitty
          bind = SUPER, C, killactive,
          bind = SUPER, M, exit,
          bind = SUPER, E, exec, thunar
          bind = SUPER, V, togglefloating,
          bind = SUPER, P, pseudo,
          EOF

      - name: Setup Tailscale
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey=${TAILSCALE_AUTH_KEY} --hostname=ci-${{ github.run_id }} --accept-routes

      - name: Start Hyprland with VNC
        run: |
          echo $CI_PASS > /tmp/vncpass && sudo chmod 600 /tmp/vncpass
          # Start Hyprland in the background for user 'yuu'
          sudo -u yuu HOME=/home/yuu Hyprland &
          sleep 5 # Give Hyprland a moment to start
          
          # Start WayVNC attached to the running Hyprland session
          sudo -u yuu HOME=/home/yuu wayvnc 0.0.0.0 5900 --password-file /tmp/vncpass &
          sleep 2

          TS_IP=$(tailscale ip -4)
          echo "==== VNC CONNECTION INFO ===="
          echo "Address:  $TS_IP"
          echo "Port:     5900"
          echo "Username: yuu"
          echo "Password: $CI_PASS"
          echo "============================="
          
          # Keep the job running
          while true; do sleep 300; done
