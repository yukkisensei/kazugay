name: yukki Ci test

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    timeout-minutes: 120

    steps:
      - uses: actions/checkout@v4

      - name: Setup user
        run: |
          PASS=$(openssl rand -base64 12 | tr -dc 'A-Za-z0-9' | head -c16)
          sudo useradd -m -s /bin/bash yuu
          echo "yuu:$PASS" | sudo chpasswd
          echo "CI_USER=yuu" >> $GITHUB_ENV
          echo "CI_PASS=$PASS" >> $GITHUB_ENV

      - name: Install deps + Clang 18
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq \
            git curl wget unzip build-essential software-properties-common \
            cmake pkg-config python3 python3-pip gnupg meson ninja-build \
            libwayland-dev wayland-protocols libxkbcommon-dev libseat-dev \
            libdrm-dev libgles2-mesa-dev libpixman-1-dev libvulkan-dev \
            libxcb1-dev libxcb-composite0-dev libxcb-xfixes0-dev \
            libxcb-render0-dev libxcb-icccm4-dev libxcb-image0-dev \
            libxcb-util-dev libxcb-ewmh-dev libxcb-present-dev \
            libxcb-damage0-dev libxcb-randr0-dev libxcb-xinput-dev \
            libxcb-xinerama0-dev libxcb-xkb-dev libpugixml-dev hwdata \
            xwayland dbus-x11 openssl swaybg waybar kitty weston \
            libgbm-dev libudev-dev libevdev-dev libmtdev-dev \
            libluajit-5.1-dev libwacom-dev libgtk-3-dev libzip-dev librsvg2-dev \
            ccache

          wget -q https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 18
          echo "CC=ccache clang-18" >> $GITHUB_ENV
          echo "CXX=ccache clang++-18" >> $GITHUB_ENV

      - name: Install Brave + Discord
        run: |
          # Brave
          sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/brave-browser-archive-keyring.gpg] https://brave-browser-apt-release.s3.brave.com/ stable main" \
            | sudo tee /etc/apt/sources.list.d/brave-browser-release.list >/dev/null
          sudo apt-get update -qq
          sudo apt-get install -y -qq brave-browser

          # Discord
          wget -q -O discord.deb "https://discord.com/api/download?platform=linux&format=deb"
          sudo apt-get install -y -qq ./discord.deb || sudo apt-get install -f -y -qq
          rm -f discord.deb

      - name: Build Hyprland
        run: |
          sudo -u yuu git clone --recursive https://github.com/hyprwm/Hyprland.git /home/yuu/Hyprland
          cd /home/yuu/Hyprland
          CC="ccache clang-18" CXX="ccache clang++-18" sudo -u yuu meson setup --buildtype=release --prefix /usr build -q
          sudo -u yuu ninja -C build -j$(nproc) -q
          sudo ninja -C build install -q

      - name: Build WayVNC
        run: |
          sudo -u yuu git clone https://github.com/any1/wayvnc.git /home/yuu/wayvnc
          cd /home/yuu/wayvnc
          CC="ccache clang-18" CXX="ccache clang++-18" sudo -u yuu meson setup build --prefix=/usr -q
          sudo -u yuu ninja -C build -j$(nproc) -q
          sudo meson install -C build -q

      - name: Setup Tailscale
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          curl -fsSL https://tailscale.com/install.sh | sh
          sudo tailscale up --authkey=${TAILSCALE_AUTH_KEY} --hostname=ci-${{ github.run_id }}

      - name: Start Weston headless + VNC
        run: |
          USER=yuu
          HOME=/home/$USER
          sudo -u $USER weston --backend=headless-backend.so --socket=wayland-1 &
          sleep 5
          echo $CI_PASS > /tmp/vncpass && chmod 600 /tmp/vncpass
          sudo -u $USER WAYLAND_DISPLAY=wayland-1 wayvnc 0.0.0.0 5900 --passwordfile /tmp/vncpass &
          TS_IP=$(tailscale ip -4)
          echo "==== CONNECT INFO ===="
          echo "Address: $TS_IP"
          echo "Username: $USER"
          echo "Password: $CI_PASS"
          echo "Port: 5900"
          while true; do sleep 300; done
